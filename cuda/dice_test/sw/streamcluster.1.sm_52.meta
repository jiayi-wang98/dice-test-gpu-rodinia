// DICECompiler Metadata for: examples/rodinia/streamcluster/sc_gpu.1.sm_52.ptx
FUNCTION = _Z19kernel_compute_costiilP5PointiiPfS1_PiPb;

DBB_ID = 0,
BITSTREAM_ADDR = $DICE_BB0_0,
BITSTREAM_LENGTH = 10,
UNROLLING_STRATEGY = 0,
LD_DEST_REGS = (%c0, %c1, %c2, %c3, %c4, %c5, %c6, %c7, %c8, %c9),
IS_PARAMETER_LOAD;

DBB_ID = 1,
BITSTREAM_ADDR = $DICE_BB0_1,
BITSTREAM_LENGTH = 12,
UNROLLING_FACTOR = 4,
UNROLLING_STRATEGY = 0,
LAT = 5,
IN_REGS = (%c0, %c6, %c7),
OUT_REGS = (%p0, %r0, %r1, %r2, %r3, %r4),
BRANCH = 1,
BRANCH_PRED = (%p0),
BRANCH_TARGET = 17,
BRANCH_RECVPC = 17;

DBB_ID = 2,
BITSTREAM_ADDR = $DICE_BB0_2,
BITSTREAM_LENGTH = 6,
UNROLLING_FACTOR = 4,
UNROLLING_STRATEGY = 0,
LAT = 3,
IN_REGS = (%c1, %c2, %c5, %r4),
OUT_REGS = (%p1, %r5, %r6, %r7),
BRANCH = 1,
BRANCH_PRED = (%p1),
BRANCH_TARGET = 11,
BRANCH_RECVPC = 11;

DBB_ID = 3,
BITSTREAM_ADDR = $DICE_BB0_3,
BITSTREAM_LENGTH = 6,
UNROLLING_FACTOR = 4,
UNROLLING_STRATEGY = 0,
LAT = 2,
IN_REGS = (%c1),
OUT_REGS = (%p2, %r10, %r7, %r8),
BRANCH = 1,
BRANCH_PRED = (%p2),
BRANCH_TARGET = 7,
BRANCH_RECVPC = 7;

DBB_ID = 4,
BITSTREAM_ADDR = $DICE_BB0_4,
BITSTREAM_LENGTH = 6,
UNROLLING_FACTOR = 2,
UNROLLING_STRATEGY = 0,
LAT = 6,
IN_REGS = (%c0, %c1, %r0, %r4, %r6, %r8),
OUT_REGS = (%r11, %r12, %r13, %r14);

DBB_ID = 5,
BITSTREAM_ADDR = $DICE_BB0_5,
BITSTREAM_LENGTH = 20,
UNROLLING_FACTOR = 1,
UNROLLING_STRATEGY = 0,
LAT = 10,
IN_REGS = (%r10, %r11, %r12, %r13, %r14),
OUT_REGS = (%p3, %r11, %r12, %r14, %r23),
LD_DEST_REGS = (%r15, %r16, %r17, %r18, %r19, %r20, %r21, %r22),
BRANCH = 1,
BRANCH_PRED = (%p3),
BRANCH_TARGET = 5,
BRANCH_RECVPC = 5;

DBB_ID = 6,
BITSTREAM_ADDR = $DICE_BB0_6,
BITSTREAM_LENGTH = 8,
UNROLLING_FACTOR = 2,
UNROLLING_STRATEGY = 0,
LAT = 8,
IN_REGS = (%r15, %r16, %r17, %r18, %r19, %r20, %r21, %r22, %r7),
OUT_REGS = (%r13);

DBB_ID = 7,
BITSTREAM_ADDR = $DICE_BB0_7,
BITSTREAM_LENGTH = 2,
UNROLLING_FACTOR = 4,
UNROLLING_STRATEGY = 0,
IN_REGS = (%r8),
OUT_REGS = (%p4),
BRANCH = 1,
BRANCH_PRED = (%p4),
BRANCH_TARGET = 11,
BRANCH_RECVPC = 11;

DBB_ID = 8,
BITSTREAM_ADDR = $DICE_BB0_8,
BITSTREAM_LENGTH = 9,
UNROLLING_FACTOR = 2,
UNROLLING_STRATEGY = 0,
LAT = 9,
IN_REGS = (%c0, %r0, %r10, %r2, %r3, %r6),
OUT_REGS = (%r15, %r16, %r17);

DBB_ID = 9,
BITSTREAM_ADDR = $DICE_BB0_9,
BITSTREAM_LENGTH = 7,
UNROLLING_FACTOR = 2,
UNROLLING_STRATEGY = 0,
LAT = 3,
IN_REGS = (%r15, %r16, %r17, %r8),
OUT_REGS = (%p5, %r15, %r17),
LD_DEST_REGS = (%r0, %r2),
BRANCH = 1,
BRANCH_PRED = (%p5),
BRANCH_TARGET = 9,
BRANCH_RECVPC = 9;

DBB_ID = 10,
BITSTREAM_ADDR = $DICE_BB0_10,
BITSTREAM_LENGTH = 2,
UNROLLING_FACTOR = 4,
UNROLLING_STRATEGY = 0,
LAT = 2,
IN_REGS = (%r0, %r2, %r7),
OUT_REGS = (%r3);

DBB_ID = 11,
BITSTREAM_ADDR = $DICE_BB0_11,
BITSTREAM_LENGTH = 7,
UNROLLING_FACTOR = 4,
UNROLLING_STRATEGY = 0,
LAT = 4,
IN_REGS = (%c3, %r2, %r4),
OUT_REGS = (%r0, %r2),
LD_DEST_REGS = (%r6, %r8),
BRANCH = 1,
BRANCH_TARGET = 13,
BRANCH_RECVPC = 13;

DBB_ID = 12,
BITSTREAM_ADDR = $DICE_BB0_12,
BITSTREAM_LENGTH = 3,
UNROLLING_FACTOR = 4,
UNROLLING_STRATEGY = 0,
LAT = 1,
IN_REGS = (%r4, %r6, %r7, %r8),
OUT_REGS = (%p6, %r4),
BRANCH = 1,
BRANCH_PRED = (%p6),
BRANCH_TARGET = 13,
BRANCH_RECVPC = 13;

DBB_ID = 13,
BITSTREAM_ADDR = $DICE_BB0_13,
BITSTREAM_LENGTH = 14,
UNROLLING_FACTOR = 2,
UNROLLING_STRATEGY = 0,
LAT = 8,
IN_REGS = (%c4, %c8, %c9, %r0, %r1, %r2, %r4, %r5, %r6, %r8),
OUT_REGS = (%r10, %r16, %r6),
LD_DEST_REGS = (%r13, %r3, %r9),
STORE = 1,
BRANCH = 1,
BRANCH_TARGET = 17,
BRANCH_RECVPC = 17;

DBB_ID = 14,
BITSTREAM_ADDR = $DICE_BB0_14,
BITSTREAM_LENGTH = 6,
UNROLLING_FACTOR = 4,
UNROLLING_STRATEGY = 0,
LAT = 4,
IN_REGS = (%r13, %r16, %r3, %r4, %r6, %r9),
LD_DEST_REGS = (%r0),
STORE = 1;

DBB_ID = 15,
BITSTREAM_ADDR = $DICE_BB0_15,
BITSTREAM_LENGTH = 4,
UNROLLING_FACTOR = 4,
UNROLLING_STRATEGY = 0,
LAT = 3,
IN_REGS = (%r0, %r1, %r2, %r5),
OUT_REGS = (%r2),
LD_DEST_REGS = (%r3);

DBB_ID = 16,
BITSTREAM_ADDR = $DICE_BB0_16,
BITSTREAM_LENGTH = 2,
UNROLLING_FACTOR = 2,
UNROLLING_STRATEGY = 0,
LAT = 1,
IN_REGS = (%r10, %r2, %r3),
STORE = 1;

DBB_ID = 17,
BITSTREAM_ADDR = $DICE_BB0_17,
RET;

